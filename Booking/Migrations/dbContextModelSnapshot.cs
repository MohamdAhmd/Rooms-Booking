// <auto-generated />
using System;
using Booking.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Booking.Migrations
{
    [DbContext(typeof(dbContext))]
    partial class dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Booking.Models.BookingModel", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<bool>("DiscountApplied")
                        .HasColumnType("bit");

                    b.Property<string>("RoomNumbers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalRooms")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("BranchID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingID = 1,
                            BranchID = 1,
                            CheckInDate = new DateTime(2020, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2020, 1, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            DiscountApplied = false,
                            RoomNumbers = "[1]",
                            TotalRooms = 1
                        },
                        new
                        {
                            BookingID = 2,
                            BranchID = 2,
                            CheckInDate = new DateTime(2021, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2021, 1, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 2,
                            DiscountApplied = true,
                            RoomNumbers = "[2]",
                            TotalRooms = 1
                        },
                        new
                        {
                            BookingID = 3,
                            BranchID = 3,
                            CheckInDate = new DateTime(2022, 1, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CheckOutDate = new DateTime(2022, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerID = 1,
                            DiscountApplied = false,
                            RoomNumbers = "[3]",
                            TotalRooms = 1
                        });
                });

            modelBuilder.Entity("Booking.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<int>("BookingCount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            BookingCount = 0,
                            Name = "Mohamed",
                            NationalID = "12345678912345",
                            PhoneNumber = "01012345678"
                        },
                        new
                        {
                            CustomerID = 2,
                            BookingCount = 1,
                            Name = "Ahmed",
                            NationalID = "12345678912367",
                            PhoneNumber = "01012345690"
                        });
                });

            modelBuilder.Entity("Booking.Models.HotelBranch", b =>
                {
                    b.Property<int>("BranchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BranchID"));

                    b.Property<string>("BranchLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BranchID");

                    b.ToTable("HotelBranches");

                    b.HasData(
                        new
                        {
                            BranchID = 1,
                            BranchLocation = "Cairo",
                            BranchName = "HollaCairo"
                        },
                        new
                        {
                            BranchID = 2,
                            BranchLocation = "Alex",
                            BranchName = "HollaAlex"
                        },
                        new
                        {
                            BranchID = 3,
                            BranchLocation = "Dahab",
                            BranchName = "HollaDahab"
                        });
                });

            modelBuilder.Entity("Booking.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoomID"));

                    b.Property<int?>("BookingID")
                        .HasColumnType("int");

                    b.Property<int>("BranchID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("int");

                    b.Property<string>("RoomType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("images")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoomID");

                    b.HasIndex("BookingID");

                    b.HasIndex("BranchID");

                    b.ToTable("Rooms");

                    b.HasData(
                        new
                        {
                            RoomID = 1,
                            BookingID = 1,
                            BranchID = 1,
                            Description = "This Room Can Have One Person",
                            NumberOfAdults = 1,
                            NumberOfChildren = 0,
                            Price = 2000,
                            RoomNumber = 1,
                            RoomType = "Single",
                            images = "[\"room1.jpeg\"]"
                        },
                        new
                        {
                            RoomID = 2,
                            BookingID = 2,
                            BranchID = 2,
                            Description = "This Room Can Have Two People",
                            NumberOfAdults = 2,
                            NumberOfChildren = 0,
                            Price = 4000,
                            RoomNumber = 2,
                            RoomType = "Double",
                            images = "[\"room2.jpeg\"]"
                        },
                        new
                        {
                            RoomID = 3,
                            BookingID = 3,
                            BranchID = 3,
                            Description = "This Room Can Have One Person and One Child",
                            NumberOfAdults = 1,
                            NumberOfChildren = 1,
                            Price = 2800,
                            RoomNumber = 3,
                            RoomType = "Single",
                            images = "[\"room3.jpeg\"]"
                        },
                        new
                        {
                            RoomID = 4,
                            BranchID = 1,
                            Description = "This Room Can Have Two Adults and One Child",
                            NumberOfAdults = 2,
                            NumberOfChildren = 1,
                            Price = 5000,
                            RoomNumber = 4,
                            RoomType = "Double",
                            images = "[\"room4.jpeg\"]"
                        },
                        new
                        {
                            RoomID = 5,
                            BranchID = 2,
                            Description = "This Room Can Have Two Adults and Two Children",
                            NumberOfAdults = 2,
                            NumberOfChildren = 2,
                            Price = 3000,
                            RoomNumber = 5,
                            RoomType = "Single",
                            images = "[\"room5.jpeg\"]"
                        },
                        new
                        {
                            RoomID = 6,
                            BranchID = 3,
                            Description = "This Room Can Have Three Adults and Two Children",
                            NumberOfAdults = 3,
                            NumberOfChildren = 2,
                            Price = 6000,
                            RoomNumber = 6,
                            RoomType = "Double",
                            images = "[\"room6.jpeg\"]"
                        });
                });

            modelBuilder.Entity("Booking.Models.BookingModel", b =>
                {
                    b.HasOne("Booking.Models.HotelBranch", "HotelBranch")
                        .WithMany("Bookings")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Booking.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("HotelBranch");
                });

            modelBuilder.Entity("Booking.Models.Room", b =>
                {
                    b.HasOne("Booking.Models.BookingModel", "Booking")
                        .WithMany("Rooms")
                        .HasForeignKey("BookingID");

                    b.HasOne("Booking.Models.HotelBranch", "HotelBranch")
                        .WithMany("Rooms")
                        .HasForeignKey("BranchID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("HotelBranch");
                });

            modelBuilder.Entity("Booking.Models.BookingModel", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Booking.Models.Customer", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("Booking.Models.HotelBranch", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Rooms");
                });
#pragma warning restore 612, 618
        }
    }
}
